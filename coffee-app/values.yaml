# Default values for coffee-app.

nameOverride: coffee-app-test
fullnameOverride: ""

backend:
  containerPort: 8000
  replicaCount: 1
  image:
    name: ""
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: true
    host: ""
    path: /
    pathType: ImplementationSpecific
    tls:
      enabled: true
      certManager:
        enabled: true
      # If certManger is eanaled, this secret will be created, otherwise it needs to exist already
      secretName: api-coffee-app-tls
  mongodb:
    host: mongodb
    port: 27017
    username: root
    # This secret needs to exist already
    passwordSecretName: mongodb-root-password
  minio:
    host: minio
    port: 9000
    coffee_images_bucket: coffee-images
    credentialsSecretName: minio-credentials


frontend:
  containerPort: 8080
  replicaCount: 1
  image:
    name: ""
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: true
    host: ""
    path: /
    pathType: ImplementationSpecific
    tls:
      enabled: true
      certManager:
        enabled: true
      secretName: coffee-app-tls



imagePullSecrets: []
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations: {}
podSecurityContext: {}
securityContext: {}

nodeSelector: {}
tolerations: []
affinity: {}
autoscaling: {}

mongodb:
  podSecurityContext:
    enabled: false
    fsGroup: ""
    runAsUser: "100108001"

  containerSecurityContext:
    enabled: false
    runAsUser: "100108001"
    runAsNonRoot: false

  auth:
    existingSecret: mongodb-root-password

minio:
  auth:
    existingSecret: minio-credentials
  podSecurityContext:
    enabled: false
  containerSecurityContext:
    enabled: false
  provisioning:
    enabled: true
    extraCommands: []
    buckets:
       - name: coffee-images
         versioning: true
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false

keycloak:
  fullnameOverride: coffee-app-test-keycloak
  realm: Coffee-App
  client_id: coffee-app
  production: true
  proxy: edge

  podSecurityContext:
    enabled: false


  extraStartupArgs: "--import-realm"


  containerSecurityContext:
    enabled: false

  extraVolumes:
    - name: inital-realm
      configMap:
        name: keycloak-realm-import

  extraVolumeMounts:
    - name: inital-realm
      mountPath: /opt/bitnami/keycloak/data/import/

  ingress:
    enabled: true
    hostname: keycloak-test.apps.cluster.local
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
    extraTls:
      - hosts:
          # Make sure its same as ingress.hostname
          - keycloak-test.apps.cluster.local
        secretName: keycloak-tls


  postgresql:
    fullnameOverride: coffee-app-test-keycloak-postgresql
    primary:
      podSecurityContext:
        enabled: false
      containerSecurityContext:
        enabled: false
    auth:
      existingSecret: keycloak-postgres-password

  auth:
    adminUser: admin
    existingSecret: keycloak-admin-password