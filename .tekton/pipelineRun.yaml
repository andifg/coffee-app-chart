apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  generateName: coffee-helm-ci-cd-
  namespace: coffee-app
  annotations:
    # The event we are targeting as seen from the webhook payload
    # this can be an array too, i.e: [pull_request, push]
    pipelinesascode.tekton.dev/on-event: "[push, pull_request]"

    # The branch or tag we are targeting (ie: main, refs/tags/*)
    pipelinesascode.tekton.dev/on-target-branch: "[refs/*]"

    # How many runs we want to keep.
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  pipelineRef:
    resolver: cluster
    params:
      - name: kind
        value: pipeline
      - name: name
        value: helm-pipeline
      - name: namespace
        value: tekton-resources
  podTemplate:
    securityContext:
      runAsUser: 65532
      fsGroup: 65532
  params:
  - name: dev-repo-url
    value: git@github.com:andifg/coffee-app-chart.git
  - name: dev-depl-url
    value: git@github.com:andifg/coffee-app-gitops.git
  - name: chart-name
    value: coffee-app
  - name: yq-select
    value: .spec.source.targetRevision
  - name: yq-target
    value: values.yaml
  - name: target-branch
    value: {{target_branch}}
  - name: source-branch
    value: {{source_branch}}
  - name: aws-credential-secret
    value: aws-iam-ecr-access
  - name: aws-region
    value: eu-central-1
  - name: ecr-registry
    value: 663151261323.dkr.ecr.eu-central-1.amazonaws.com
  - name: ecr-user
    value: AWS
  workspaces:
  - name: ssh-creds
    secret:
      secretName: ssh-creds
  - name: app-pvc
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 300Mi
        volumeMode: Filesystem
  - name: argo-pvc
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 300Mi
        volumeMode: Filesystem
